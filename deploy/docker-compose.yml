version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: goooo_postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Go Telegram Bot Application
  app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: goooo_app
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: goooo_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
      - /etc/letsencrypt/archive/body-architect.ru:/etc/nginx/ssl:ro # Раскомментируйте, если нужен SSL
    depends_on:
      - app
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/80"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - .env

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  goooo_network:
    driver: bridge 