.PHONY: help up down logs build test clean

# Load environment variables from .env file and export them
include .env
export

# ===================================================================================
# Help
# ===================================================================================

help: ## –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@echo "Usage: make [target]"
	@echo ""
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  \033[1;33m%-20s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

# ===================================================================================
# Docker-based Environment Commands
# ===================================================================================

COMPOSE_FILE = docker-compose.yml
COMPOSE_CMD = docker compose -f $(COMPOSE_FILE) --env-file .env

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
	@echo "üöÄ Starting all services..."
	@$(COMPOSE_CMD) up -d

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "üõë Stopping all services..."
	@$(COMPOSE_CMD) down

rebuild-up: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
	@echo "üèóÔ∏è  Rebuilding and starting all services..."
	@$(COMPOSE_CMD) up -d --build

rebuild-nginx: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å nginx
	@echo "üîÑ Rebuilding and restarting nginx service..."
	@$(COMPOSE_CMD) up -d --build nginx

build: ## –°–æ–±—Ä–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üõ†Ô∏è Building images..."
	@$(COMPOSE_CMD) build

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "üîÑ Restarting all services..."
	@$(COMPOSE_CMD) restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìú Tailing logs..."
	@$(COMPOSE_CMD) logs -f

logs-app: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–∞ 'app'
	@echo "üìú Tailing logs for app..."
	@$(COMPOSE_CMD) logs -f app

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "üìä Showing container status..."
	@$(COMPOSE_CMD) ps

clean: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Å–µ—Ç–∏ –∏ volumes
	@echo "üßπ Cleaning up the environment..."
	@$(COMPOSE_CMD) down -v --remove-orphans

# ===================================================================================
# Database Migration Commands
# ===================================================================================

# Construct the database URL from exported env vars
DATABASE_URL = postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable

MIGRATE_CMD = $(COMPOSE_CMD) run --rm migrate -path /migrations -database "$(DATABASE_URL)"

migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ (e.g., make migrate-create NAME=add_users_table)
	@if [ -z "$(NAME)" ]; then echo "Usage: make migrate-create NAME=<migration_name>"; exit 1; fi
	@echo "‚úçÔ∏è Creating migration file: $(NAME)..."
	docker run --rm -v $(shell pwd)/deploy/migrations:/migrations migrate/migrate:v4.17.1 create -ext sql -dir /migrations -seq $(NAME)

migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	@echo "üìä Checking migration status..."
	@$(MIGRATE_CMD) version

migrate-up: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
	@echo "‚¨ÜÔ∏è Applying all up migrations..."
	@$(MIGRATE_CMD) up

migrate-down: ## –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é
	@echo "‚¨áÔ∏è Reverting last migration..."
	@$(MIGRATE_CMD) down

# ===================================================================================
# Utility Commands
# ===================================================================================

db-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –æ–±–æ–ª–æ—á–∫–µ PostgreSQL –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "üóÑÔ∏è Connecting to PostgreSQL shell..."
	@$(COMPOSE_CMD) exec postgres psql -U $(DB_USER) -d $(DB_NAME)

app-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –æ–±–æ–ª–æ—á–∫–µ 'app' –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 'scratch')
	@echo "üêö Connecting to app shell (Note: will fail with 'scratch' image)..."
	@$(COMPOSE_CMD) exec app sh

nginx-reload: ## –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
	@echo " reloading Nginx configuration..."
	@$(COMPOSE_CMD) exec nginx nginx -s reload