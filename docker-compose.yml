version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: goooo_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: goooo
      POSTGRES_USER: goooo_user
      POSTGRES_PASSWORD: goooo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U goooo_user -d goooo"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Go Telegram Bot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: goooo_app
    restart: unless-stopped
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - DATABASE_URL=postgres://goooo_user:goooo_password@postgres:5432/goooo?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: goooo_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - goooo_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  goooo_network:
    driver: bridge 